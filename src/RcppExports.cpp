// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// soft_full
arma::mat soft_full(arma::mat L, double lambda);
RcppExport SEXP _MissCP_soft_full(SEXP LSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type L(LSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(soft_full(L, lambda));
    return rcpp_result_gen;
END_RCPP
}
// lambda_warm_up
List lambda_warm_up(NumericMatrix data_y, NumericMatrix data_x, NumericVector blocks, NumericVector cv_index);
RcppExport SEXP _MissCP_lambda_warm_up(SEXP data_ySEXP, SEXP data_xSEXP, SEXP blocksSEXP, SEXP cv_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data_y(data_ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data_x(data_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type blocks(blocksSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv_index(cv_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(lambda_warm_up(data_y, data_x, blocks, cv_index));
    return rcpp_result_gen;
END_RCPP
}
// lm_break_fit_block
List lm_break_fit_block(NumericMatrix data_y, NumericMatrix data_x, double lambda, double lambda2, int max_iteration, double tol, NumericMatrix initial_phi, NumericVector blocks, NumericVector cv_index);
RcppExport SEXP _MissCP_lm_break_fit_block(SEXP data_ySEXP, SEXP data_xSEXP, SEXP lambdaSEXP, SEXP lambda2SEXP, SEXP max_iterationSEXP, SEXP tolSEXP, SEXP initial_phiSEXP, SEXP blocksSEXP, SEXP cv_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data_y(data_ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data_x(data_xSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< int >::type max_iteration(max_iterationSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type initial_phi(initial_phiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type blocks(blocksSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv_index(cv_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(lm_break_fit_block(data_y, data_x, lambda, lambda2, max_iteration, tol, initial_phi, blocks, cv_index));
    return rcpp_result_gen;
END_RCPP
}
// lm_partial_break_fit_block
List lm_partial_break_fit_block(NumericMatrix data_y, NumericMatrix data_x, double lambda, double lambda2, int max_iteration, double tol, NumericMatrix initial_phi, NumericMatrix initial_phi_2, NumericVector blocks, NumericVector cv_index, arma::uvec fixed_index, arma::uvec nonfixed_index);
RcppExport SEXP _MissCP_lm_partial_break_fit_block(SEXP data_ySEXP, SEXP data_xSEXP, SEXP lambdaSEXP, SEXP lambda2SEXP, SEXP max_iterationSEXP, SEXP tolSEXP, SEXP initial_phiSEXP, SEXP initial_phi_2SEXP, SEXP blocksSEXP, SEXP cv_indexSEXP, SEXP fixed_indexSEXP, SEXP nonfixed_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data_y(data_ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data_x(data_xSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< int >::type max_iteration(max_iterationSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type initial_phi(initial_phiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type initial_phi_2(initial_phi_2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type blocks(blocksSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv_index(cv_indexSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type fixed_index(fixed_indexSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type nonfixed_index(nonfixed_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(lm_partial_break_fit_block(data_y, data_x, lambda, lambda2, max_iteration, tol, initial_phi, initial_phi_2, blocks, cv_index, fixed_index, nonfixed_index));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MissCP_soft_full", (DL_FUNC) &_MissCP_soft_full, 2},
    {"_MissCP_lambda_warm_up", (DL_FUNC) &_MissCP_lambda_warm_up, 4},
    {"_MissCP_lm_break_fit_block", (DL_FUNC) &_MissCP_lm_break_fit_block, 9},
    {"_MissCP_lm_partial_break_fit_block", (DL_FUNC) &_MissCP_lm_partial_break_fit_block, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_MissCP(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
